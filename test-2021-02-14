#define _CRT_SECURE_NO_WARNINGS 1

//作业讲解
//return只能返回一个值
//函数的参数不宜过多
//尽量少使用全局变量
//
//#include<stdio.h>
//int main()
//{
//	char str[] = "hello night study!";
//	printf("%d %d\n", sizeof(str), strlen(str));
//	return 0;
//}

//冒泡排序操作回顾

////编程题——创建一个数组，完成对其操作
//#include<stdio.h>
//void Init(int arr[], int sz)//传数组实参的时候，函数必须写arr{}
//{
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		arr[i] = 0;
//	}
//}
//void Print(int arr[], int sz)
//{
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", arr[i]);
//		
//	}
//	printf("\n");
//}
//void Reverse(int arr[], int sz)
//{
//	int left = 0;
//	int right = sz - 1;
//	int tmp = 0;
//	while (left < right)
//	{
//		tmp = arr[left];
//		arr[left] = arr[right];
//		arr[right] = tmp;
//		left++;
//		right--;
//	}
//}
//int main()
//{
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	Print(arr, sz);
//	Reverse(arr, sz);
//	//Init(arr,sz);//把数组初始化成全0
//	Print(arr, sz);
//	return 0;
//}
//
////数组交换 编程
//#include<stdio.h>
//void Switch(int arr1[], int arr2[],int sz)
//{
//	int tmp = 0;
//	int i = 0;
//	for (i = 0; i<sz; i++)
//	{
//		tmp = arr1[i];
//		arr1[i] = arr2[i];
//		arr2[i] = tmp;
//	}
//}
//void Print(int arr[],int sz)
//{
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", arr[i]);
//	}
//	printf("\n");
//}
//int main()
//{
//	int arr1[] = { 1,3,5,7,9 };
//	int arr2[] = { 2,4,6,8,10 };
//	int sz = sizeof(arr1) / sizeof(arr1[0]);
//	Switch(arr1, arr2,sz);
//	Print(arr1,sz);
//	Print(arr2,sz);
//}

#include<stdio.h>
int main()
{
	int arr[] = { 1,2,3,4,5 };
	short* p = (short*)arr;
	int i = 0;
	for (i = 0; i < 4; i++)
	{
		*(p + i)=0;
	}
	for (i = 0; i < 5; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}
