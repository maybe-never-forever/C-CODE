#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
//描述一个学生——使用一些数据
//名字
//年龄
//性别
//电话
//struct stu//struct，结构体关键字；stu 结构体标签  struct stu 结构体类型
//{
//	//成员变量
//	char name[20];
//	short age;
//	char tele[12];//定义一个结构体类型
//	char sex[5];
//}//}s1,s2,s3;//s1,s2,s3 是三个全局结构体变量
//
//typedef struct stu
//{
//
//	char name[20];
//	short age;
//	char tele[12];
//	char sex[5];
//}stu;//重新命名为stu，可以用stu来作为变量类型,这里的stu时类型
//
//int main()
//{
//	struct stu s1 = {"张三",20,"19283876","男"};
//	stu s2 = { "李四",21,"1352056123","保密" };
//	return 0;
//}
//
//struct S
//{
//	int a;
//	short b;
//	char arr[20];
//	double d;
//};
//struct T
//{
//	char ch[10];
//	struct S s;
//	char* p;
//};
//
//int main()
//{
//	char arr[] = "night study is good!";
//	struct T t = { "hehe",{100,10,"hello",3.1415},arr };//嵌套
//	printf("%s\n", t.ch);
//	printf("%s\n", t.s.arr);
//	printf("%lf\n", t.s.d);
//	printf("%s\n", t.p);
//	return 0;
//}
//
//typedef struct stu
//{
//
//	char name[20];
//	short age;
//	char tele[12];
//	char sex[5];
//}stu;
//void Print1(stu tmp)//在使用的时候会产生拷贝，消耗的资源更少
//{
//	printf("name: %s\n", tmp.name);
//	printf("age:  %d\n", tmp.age);
//	printf("tele: %s\n", tmp.tele);
//	printf("sex:  %s\n", tmp.sex);
//}
//void Print2(stu* p)
//{
//	printf("name: %s\n", p->name);
//	printf("age:  %d\n", p->age);
//	printf("tele: %s\n", p->tele);
//	printf("sex:  %s\n", p->sex);
//}
//int main()
//{
//	stu s = { "王五",30,"13688888779","男" };
//	//打印结构体数据
//	//Print1 和Print2 哪个更好
//	//Print2 更好
//	Print1(s);
//	printf("\n");
//	Print2(&s);
//	return 0;
//}
int Add(int x, int y)
{
	 return x + y;
}
int main()
{
	int a = 10;
	int b = 20;
	int ret = 0;
	ret = Add(a, b);
	printf("%d\n", ret);
}
